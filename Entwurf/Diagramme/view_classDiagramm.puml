@startuml

namespace de.sswis.view {

    interface de.sswis.view.AbstractView [[AbstractView.html]] {
                {abstract} +update(): void
                {abstract} +show(): void
                {abstract} +close(): void
            }

    together
    {
    interface de.sswis.view.AbstractMainView [[AbstractMainView.html]] {
                {abstract} +addConfiguration(VMConfiguration): void
                {abstract} +removeConfiguration(String): void
                {abstract} +addResult(String, VMResult): void
                {abstract} +setSimulationFinished(String): void
                {abstract} +addStartButtonActionlistener(ActionListener): void
                {abstract} +addStopActionListener(ActionListener): void
                {abstract} +addShowButtonActionlistener(ActionListener): void
                {abstract} +addSaveButtonActionlistener(ActionListener): void
                {abstract} +addNewGameMenuActionListener(ActionListener): void
                {abstract} +addNewCombiStrategyMenuActionListener(ActionListener): void
                {abstract} +addNewStrategyMenuActionListener(ActionListener): void
                {abstract} +addNewInitMenuActionListener(ActionListener): void
                {abstract} +addNewConfigMenuActionListener(ActionListener): void
                {abstract} +addManageGameMenuActionListener(ActionListener): void
                {abstract} +addManageCombiStrategyMenuActionListener(ActionListener): void
                {abstract} +addManageStrategyMenuActionListener(ActionListener): void
                {abstract} +addManageInitMenuActionListener(ActionListener): void
                {abstract} +addManageConfigMenuActionListener(ActionListener): void
            }

    interface de.sswis.view.AbstractManageGamesView [[AbstractManageGamesView.html]] {
                {abstract} +addGame(VMGame): void
                {abstract} +removeGame(String): void
                {abstract} +addNewGameButtonActionlistener(ActionListener): void
                {abstract} +addEditGameButtonActionlistener(ActionListener): void
                {abstract} +addDeleteGameButtonActionlistener(ActionListener): void
                {abstract} +addCancelButtonActionlistener(ActionListener): void
                {abstract} +addSaveQuitButtonActionlistener(ActionListener): void
            }

    interface de.sswis.view.AbstractNewGameView [[AbstractNewGameView.html]] {
                {abstract} +addCancelButtonActionlistener(ActionListener): void
                {abstract} +addFinishButtonActionlistener(ActionListener): void
            }
    }

    together
    {

    class de.sswis.view.MainView [[MainView.html]] {
                +addConfiguration(VMConfiguration): void
                +removeConfiguration(String): void
                +addResult(String, VMResult): void
                +setSimulationFinished(String): void
                +addStartButtonActionlistener(ActionListener): void
                +addStopActionListener(ActionListener): void
                +addShowButtonActionlistener(ActionListener): void
                +addSaveButtonActionlistener(ActionListener): void
                +addNewGameMenuActionListener(ActionListener): void
                +addNewCombiStrategyMenuActionListener(ActionListener): void
                +addNewStrategyMenuActionListener(ActionListener): void
                +addNewInitMenuActionListener(ActionListener): void
                +addNewConfigMenuActionListener(ActionListener): void
                +addManageGameMenuActionListener(ActionListener): void
                +addManageCombiStrategyMenuActionListener(ActionListener): void
                +addManageStrategyMenuActionListener(ActionListener): void
                +addManageInitMenuActionListener(ActionListener): void
                +addManageConfigMenuActionListener(ActionListener): void
                +update(): void
                +show(): void
                +close(): void
            }

    class de.sswis.view.ManageGamesView [[ManageGamesView.html]] {
                +addGame(VMGame): void
                +removeGame(String): void
                +addNewGameButtonActionlistener(ActionListener): void
                +addEditGameButtonActionlistener(ActionListener): void
                +addDeleteGameButtonActionlistener(ActionListener): void
                +addCancelButtonActionlistener(ActionListener): void
                +addSaveQuitButtonActionlistener(ActionListener): void
                +update(): void
                +show(): void
                +close(): void
            }

    class de.sswis.view.NewGameView [[NewGameView.html]] {
                +update(): void
                +show(): void
                +close(): void
                +addCancelButtonActionlistener(ActionListener): void
                +addFinishButtonActionlistener(ActionListener): void
            }
    }


    namespace model {

        together
        {
        class de.sswis.view.model.VMConfiguration [[VMConfiguration.html]] {
                    +isCorrect(): boolean
                    +isMultiConfiguration(): boolean
                    +hasResult(): boolean
                    +getToolTipText(): String
                }

        class de.sswis.view.model.VMGame [[VMGame.html]] {
                    +isCorrect(): boolean
                    +getToolTipText(): String
                }
        }
    }

    AbstractView -[hidden]-> AbstractManageGamesView
    AbstractMainView -[hidden]> AbstractManageGamesView
    AbstractManageGamesView -[hidden]> AbstractNewGameView

    de.sswis.view.model.VMConfiguration -[hidden]> de.sswis.view.model.VMGame
    de.sswis.view.MainView -[hidden]--> de.sswis.view.model

    AbstractView <|.. AbstractMainView
    AbstractView <|.. AbstractManageGamesView
    AbstractView <|.. AbstractNewGameView

    AbstractMainView <|.. MainView
    AbstractManageGamesView <|.. ManageGamesView
    AbstractNewGameView <|.. NewGameView

    MainView -> "*" de.sswis.view.model.VMConfiguration: configurations
    ManageGamesView -> "*" de.sswis.view.model.VMGame: createdGames
    NewGameView -> "1" de.sswis.view.model.VMGame: newGame
}

@enduml